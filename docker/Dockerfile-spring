###FROM maven:3.9-eclipse-temurin-17 AS build
##
### Stage 1: Build the application
##FROM maven:3.9-eclipse-temurin-17 AS build
##WORKDIR /app
##COPY pom.xml .
##COPY src ./src
##RUN mvn clean package -DskipTests
##
### Stage 2: Run the application
##FROM eclipse-temurin:17-jdk
##WORKDIR /app
##COPY --from=build /app/target/*.jar app.jar
##EXPOSE 8080
##ENTRYPOINT ["java", "-jar", "app.jar"]
#
## Use a specific Maven version with JDK 17
#FROM maven:3.9-eclipse-temurin-17 AS build
#
## Set the working directory inside the container
#WORKDIR /app
#
## Copy the pom.xml and src directories
#COPY pom.xml .
#COPY src ./src
#
## Build the application using Maven
#RUN mvn clean package -DskipTests
#
## Expose port 8080
#EXPOSE 8080
#
## Run the application
#CMD ["java", "-jar", "target/app.jar"]

# Stage 1: Build Stage
FROM maven:3.8.5-openjdk-17 AS build

# Set the working directory
WORKDIR /app

# Copy the pom.xml and download dependencies
COPY pom.xml .
RUN mvn dependency:go-offline

# Copy the source code and build the application
COPY src ./src
RUN mvn package -DskipTests

# Stage 2: Runtime Stage
FROM openjdk:17-jdk-slim

# Set the working directory
WORKDIR /app

# Copy the Spring Boot application from the build stage
COPY --from=build /app/target/*.jar app.jar

# Expose the port the application runs on
EXPOSE 8080

# Run the Spring Boot application
CMD ["java", "-jar", "app.jar"]
